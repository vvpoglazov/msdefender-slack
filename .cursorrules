# Microsoft Defender Slack Notification System - Project Intelligence

## Project Patterns

### 1. Infrastructure Standards
- Use Terraform for all infrastructure definitions
- Follow modular approach with reusable components
- Store state in S3 with locking via DynamoDB
- Use variables and locals for configuration
- Apply least privilege principle for all IAM roles

### 2. Code Organization
- Python for Lambda functions
- Use src/ directory for source code
- Separate concerns into modules (alert processing, formatting, API clients)
- Keep Lambda handlers thin, delegate to library modules
- Use type hints for function signatures

### 3. Formatting and Naming
- Use snake_case for variable and function names (Python convention)
- Use PascalCase for classes
- Use snake_case for file names
- Use meaningful names that describe purpose
- Group related functionality in modules

### 4. Security Practices
- Never hardcode secrets or credentials
- Use AWS Secrets Manager for all sensitive data
- Validate and sanitize all incoming data
- Apply appropriate content security policies
- Log securely (no sensitive data in logs)

### 5. Testing Strategy
- Use pytest for unit and integration tests
- Mock external dependencies
- Use dependency injection for testability
- Achieve high test coverage for critical paths
- Use AWS SAM for local Lambda testing

### 6. Documentation
- Document all modules and functions with docstrings
- Maintain up-to-date Memory Bank entries
- Include type hints for better IDE support
- Include setup instructions in README
- Document message formats and examples

## User Preferences
- Focus on clean, maintainable code
- Emphasize security best practices
- Provide detailed planning before implementation
- Follow AWS best practices for serverless
- Modular approach for easy maintenance

## Implementation Notes
- Prefer try/except blocks for error handling
- Use structured logging
- Implement comprehensive error handling
- Use environment variables for configuration
- Apply defensive programming principles

## Tools and Technologies
- Terraform for infrastructure
- Python 3.9+ runtime for Lambda
- AWS SDK for Python (boto3)
- pytest for testing
- Slack Block Kit for message formatting
- Requests library for HTTP requests
- AWS Secrets Manager for credentials
- EventBridge for scheduling 